name: CI

on:
    push:
        branches: [ main, master ]
        tags:
            - 'v*'
    pull_request:
        branches: [ main, master ]
    release:
        types: [ published ]

jobs:
    lint-and-test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [ 20.x, 22.x, 24.x ]

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}
                    cache: 'npm'

            -   name: Install dependencies
                run: npm ci

            -   name: Run ESLint
                run: npm run lint

            -   name: Run tests
                run: npm run test

            -   name: Run build
                run: npm run build

    release:
        if: startsWith(github.ref, 'refs/tags/')
        needs: lint-and-test
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js 22.x
                uses: actions/setup-node@v4
                with:
                    node-version: 22.x
                    cache: 'npm'

            -   name: Install dependencies
                run: npm ci

            -   name: Run build
                run: npm run build

            -   name: Generate changelog
                id: changelog
                run: |
                    # Fetch full history
                    git fetch --unshallow --tags
                    
                    # Get previous tag
                    PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
                    
                    # Generate simple changelog
                    if [ -n "$PREV_TAG" ]; then
                        CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
                    else
                        CHANGELOG="- Initial release ${{ github.ref_name }}"
                    fi
                    
                    # Set output
                    {
                        echo "notes<<EOF"
                        echo "$CHANGELOG"
                        echo "EOF"
                    } >> $GITHUB_OUTPUT

            -   name: Create Release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    gh release create ${{ github.ref_name }} \
                        --title "Release ${{ github.ref_name }}" \
                        --notes "${{ steps.changelog.outputs.notes }}" \
                        --latest \
                        --force