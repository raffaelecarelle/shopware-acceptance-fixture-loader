name: CI

on:
    push:
        branches: [ main, master ]
        tags:
            - 'v*'
    pull_request:
        branches: [ main, master ]
    release:
        types: [ published ]

jobs:
    lint-and-test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [ 18.x, 20.x, 22.x ]

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js ${{ matrix.node-version }}
                uses: actions/setup-node@v4
                with:
                    node-version: ${{ matrix.node-version }}
                    cache: 'npm'

            -   name: Install dependencies
                run: npm ci

            -   name: Run ESLint
                run: npm run lint

            -   name: Run tests
                run: npm run test

            -   name: Run build
                run: npm run build

    release:
        if: startsWith(github.ref, 'refs/tags/')
        needs: lint-and-test
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js 20.x
                uses: actions/setup-node@v4
                with:
                    node-version: 20.x
                    cache: 'npm'

            -   name: Install dependencies
                run: npm ci

            -   name: Run build
                run: npm run build

            -   name: Generate changelog
                id: changelog
                run: |
                    # Install github-changelog-generator
                    sudo gem install github_changelog_generator
                    
                    # Extract version from tag (remove 'v' prefix if present)
                    VERSION="${{ github.ref_name }}"
                    VERSION=${VERSION#v}
                    
                    # Generate changelog for this specific version
                    github_changelog_generator \
                        --user raffaelecarelle \
                        --project shopware-acceptance-fixture-loader \
                        --token ${{ secrets.GITHUB_TOKEN }} \
                        --since-tag $(git describe --tags --abbrev=0 HEAD^) \
                        --due-tag ${{ github.ref_name }} \
                        --output /tmp/changelog.md \
                        --no-verbose
                    
                    # Extract only the release notes for this version
                    CHANGELOG=$(awk '/^## \['"$VERSION"'\]/,/^## \[/{if(/^## \['"$VERSION"'\]/) next; if(/^## \[/) exit; print}' /tmp/changelog.md)
                    
                    # If changelog is empty, fallback to commit messages
                    if [ -z "$CHANGELOG" ]; then
                        CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
                    fi
                    
                    # Set output with proper multiline handling
                    {
                        echo "notes<<EOF"
                        echo "$CHANGELOG"
                        echo "EOF"
                    } >> $GITHUB_OUTPUT

            -   name: Create Release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    gh release create ${{ github.ref_name }} \
                        --title "Release ${{ github.ref_name }}" \
                        --notes "${{ steps.changelog.outputs.notes }}" \
                        --latest